<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="alreadysubscribed.Text" xml:space="preserve">
    <value>[you are subscribed to this feed]</value>
  </data>
  <data name="autosubscribed.Text" xml:space="preserve">
    <value>[you are auto-subscribed to this feed]</value>
  </data>
  <data name="btnSubscribe.Text" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="btnUnSubscribe.Text" xml:space="preserve">
    <value>Unsubscribe</value>
  </data>
  <data name="Error_LoginRequired.Text" xml:space="preserve">
    <value>It appears as if you have a user account in our website. You must login first, if you want to update your subscriptions.&lt;p&gt;&lt;a href="{0}"&gt;Login&lt;/a&gt;&lt;/p&gt;</value>
  </data>
  <data name="Error_NoSuchEmail.Text" xml:space="preserve">
    <value>No entry with that e-mail address found.</value>
  </data>
  <data name="lblEmail.Text" xml:space="preserve">
    <value>E-Mail address:</value>
  </data>
  <data name="lblError.Text" xml:space="preserve">
    <value>Sorry, we are not able to process your request. please try again later or contact our webmaster.</value>
  </data>
  <data name="lblLanguage.Text" xml:space="preserve">
    <value>Preferred Language:</value>
  </data>
  <data name="lblMultipleSelect.Text" xml:space="preserve">
    <value>Please select areas that you would like to update your subscription status for. All actions trigger an e-mail message to you , containing a link that you must follow to verifiy your request.</value>
  </data>
  <data name="lblName.Text" xml:space="preserve">
    <value>Your name:</value>
  </data>
  <data name="lblSingleSelect.Text" xml:space="preserve">
    <value>You can now update your subscription status for the &lt;b&gt;{0}&lt;/b&gt; feed. Note that this will trigger an e-mail message to you, containing a link that you must follow to verifiy your request.</value>
  </data>
  <data name="lblSingleSelect_Subscribed.Text" xml:space="preserve">
    <value>You are subscribed to the &lt;b&gt;{0}&lt;/b&gt; feed.  Click &lt;i&gt;&lt;b&gt;Unsubscribe&lt;b&gt;&lt;/i&gt; to cancel your subscription.</value>
  </data>
  <data name="onlyregisteredusers.Text" xml:space="preserve">
    <value>[only for registered users]</value>
  </data>
  <data name="SubscriptionFinalized.Error" xml:space="preserve">
    <value>Sorry, your request could not be processed. No such subscription could be found in our database.</value>
  </data>
  <data name="SubscriptionFinalized.Text" xml:space="preserve">
    <value>Thank you, your request has been processed. You are now subscribed to the following newsletter: &lt;strong&gt;{0}&lt;/strong&gt;</value>
  </data>
  <data name="SubscriptionStatusChange.Text" xml:space="preserve">
    <value>{0}: Your subscription status request</value>
  </data>
  <data name="Success_Anonymous.Text" xml:space="preserve">
    <value>Your request has been received. We have sent you a confirmation e-mail containing a link that you must follow in order to verify your request. This is to make sure the request comes from a valid subscription account.</value>
  </data>
  <data name="Success_Authenticated.Text" xml:space="preserve">
    <value>Thank you, your subscription status has been updated. You will start to receive notifications with the next new article.</value>
  </data>
  <data name="Success_Unsubscribe.Text" xml:space="preserve">
    <value>Thank you, your subscription status has been updated. You will no longer receive the selected newsletter(s).</value>
  </data>
  <data name="UnSubscriptionFinalized.Error" xml:space="preserve">
    <value>Sorry, your request could not be processed. No such subscription could be found in our database.</value>
  </data>
  <data name="UnSubscriptionFinalized.Text" xml:space="preserve">
    <value>Thank you, your request has been processed. Your e-mail address has been removed from the newsletter list of &lt;strong&gt;{0}&lt;/strong&gt;</value>
  </data>
  <data name="lblSingleSelect_Auth.Text" xml:space="preserve">
    <value>You can now update your subscription status for the &lt;b&gt;{0}&lt;/b&gt; feed. This will add you to the newsletter list immediately.</value>
  </data>
  <data name="InvalidEmailAddress.Text" xml:space="preserve">
    <value>You must provide a valid e-mail address!</value>
  </data>
  <data name="InvalidEmailName.Text" xml:space="preserve">
    <value>You must provide your name!</value>
  </data>
</root>