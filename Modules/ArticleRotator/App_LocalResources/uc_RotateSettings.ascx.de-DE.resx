<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NoModuleFound.Text" xml:space="preserve">
    <value>Kein Artikel Modul gefunden, von dem Sie Artikel rotieren lassen könnten. Bitte platzieren Sie zunächst ein zentrales Artikel-Modul in Ihrem Portal. Weitere Informationen finden Sie im Bereich Getting Started in der Hilfe.</value>
  </data>
  <data name="plTransition.Help" xml:space="preserve">
    <value>Wählen Sie einen der Übergangseffekte aus</value>
  </data>
  <data name="plTransition.Text" xml:space="preserve">
    <value>Übergangseffekt</value>
  </data>
  <data name="plFramesToShow.Help" xml:space="preserve">
    <value>Geben Sie an, wieviele Beiträge pro Durchlauf des Tickers gezeigt werden sollen (Standard ist 1)</value>
  </data>
  <data name="AllCategories.Text" xml:space="preserve">
    <value>-- Alle Kategorien --</value>
  </data>
  <data name="plFramesToShow.Text" xml:space="preserve">
    <value>Beiträge pro Durchlauf</value>
  </data>
  <data name="plScrollDirection.Help" xml:space="preserve">
    <value>Die Laufrichtung des Tickers</value>
  </data>
  <data name="plScrollDirection.Text" xml:space="preserve">
    <value>Laufrichtung</value>
  </data>
  <data name="plScrollHeight.Help" xml:space="preserve">
    <value>Geben Sie die Höhe des Tickers in % oder in px (Pixel) an</value>
  </data>
  <data name="plScrollHeight.Text" xml:space="preserve">
    <value>Ticker Höhe</value>
  </data>
  <data name="plScrollSpeed.Help" xml:space="preserve">
    <value>Geben Sie die Geschwindigkeit des Tickers in ms an (Standard ist 20)</value>
  </data>
  <data name="plScrollSpeed.Text" xml:space="preserve">
    <value>Geschwindigkeit</value>
  </data>
  <data name="plScrollTimeout.Help" xml:space="preserve">
    <value>Geben Sie die Zeit in Millisekunden an, die ein Beitrag im Ticker angezeigt werden soll (Standard ist 5000)</value>
  </data>
  <data name="plScrollTimeout.Text" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="plScrollWidth.Help" xml:space="preserve">
    <value>Geben Sie die Breite des Tickers in % oder in px (Pixel) an</value>
  </data>
  <data name="plScrollWidth.Text" xml:space="preserve">
    <value>Ticker Breite</value>
  </data>
  <data name="ScrollDown.Text" xml:space="preserve">
    <value>abwärts</value>
  </data>
  <data name="ScrollLeft.Text" xml:space="preserve">
    <value>links</value>
  </data>
  <data name="ScrollRight.Text" xml:space="preserve">
    <value>rechts</value>
  </data>
  <data name="ScrollUp.Text" xml:space="preserve">
    <value>aufwärts</value>
  </data>
  <data name="plTheme.Text" xml:space="preserve">
    <value>Artikel Layout</value>
  </data>
  <data name="plTheme.Help" xml:space="preserve">
    <value>Wählen Sie das Layout aus, das für die Darstellung von Artikeln verwendet werden soll</value>
  </data>
  <data name="plSelectNewsModule.Text" xml:space="preserve">
    <value>Rotiere Artikel von...</value>
  </data>
  <data name="plSelectNewsModule.Help" xml:space="preserve">
    <value>Wählen Sie aus, von welcher Modulinstanz Artikel rotiert werden sollen</value>
  </data>
  <data name="plCategories.Text" xml:space="preserve">
    <value>Nach Kategorie filtern</value>
  </data>
  <data name="plCategories.Help" xml:space="preserve">
    <value>Wählen Sie eine Kategorie aus, um nur Artikel aus dieser Kategorie zu rotieren</value>
  </data>
  <data name="plRowCount.Text" xml:space="preserve">
    <value>Max. Anzahl Artikel</value>
  </data>
  <data name="plRowCount.Help" xml:space="preserve">
    <value>Geben Sie an, wieviele Artikel maximal rotiert werden sollen.</value>
  </data>
  <data name="plModuletitle.Text" xml:space="preserve">
    <value>Übersetzter Modultitel</value>
  </data>
  <data name="plModuletitle.Help" xml:space="preserve">
    <value>Sie können für jede verfügbare Sprache Ihres Portals einen eigenen Modultitel hinterlegen</value>
  </data>
  <data name="cmdUpdate.Text" xml:space="preserve">
    <value>Einstellungen speichern</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="ControlTitle_controlpanel.Text" xml:space="preserve">
    <value>Nuntio Artikel Konfiguration</value>
  </data>
  <data name="plSortOrder.Text" xml:space="preserve">
    <value>Sortierung</value>
  </data>
  <data name="plSortOrder.Help" xml:space="preserve">
    <value>Geben Sie an, ob Artikel nach Veröffentlichungsdatum in aufsteigender (asc) oder absteigenden (desc) Reihenfolge sortiert werden sollen</value>
  </data>
  <data name="asc.Text" xml:space="preserve">
    <value>aufsteigend</value>
  </data>
  <data name="desc.Text" xml:space="preserve">
    <value>absteigend</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>Bitte verwenden Sie das Benutzerhandbuch</value>
  </data>
  <data name="plShowFutureItems.Text" xml:space="preserve">
    <value>Zeige zukünftige Artikel</value>
  </data>
  <data name="plShowFutureItems.Help" xml:space="preserve">
    <value>Aktivieren Sie diese Option, um Artikel mit einem Veröffentlichungsdatum in der Zukunft zu zeigen</value>
  </data>
  <data name="plUseOriginalVersion.Text" xml:space="preserve">
    <value>Übersetzungs Fallback verwenden</value>
  </data>
  <data name="plUseOriginalVersion.Help" xml:space="preserve">
    <value>Wenn diese Option aktiviert ist, wird die Originalversion eines Artikels angezeigt, falls keine Übersetzung in der aktuell gewählten Sprache gefunden werden kann.</value>
  </data>
  <data name="plShowPastItems.Help" xml:space="preserve">
    <value>Aktivieren Sie diese Option, um auch Artikel mit einem Veröffentlichungsdatum in der Vergangenheit zu zeigen.</value>
  </data>
  <data name="plShowPastItems.Text" xml:space="preserve">
    <value>Zeige vergangene Artikel</value>
  </data>
</root>