<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSend.Text" xml:space="preserve">
    <value>Abschicken</value>
  </data>
  <data name="YourComment.Text" xml:space="preserve">
    <value>Ihr Kommentar...</value>
  </data>
  <data name="btnDelete.Text" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="btnLogin.Text" xml:space="preserve">
    <value>Anmelden</value>
  </data>
  <data name="btnRegister.Text" xml:space="preserve">
    <value>Zugang anlegen</value>
  </data>
  <data name="btnUpdate.Text" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="chkAuthorized.Text" xml:space="preserve">
    <value>veröffentlichen</value>
  </data>
  <data name="lblCannotRegister.Text" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="lblRegister.Text" xml:space="preserve">
    <value>, oder legen Sie sich einen Zugang an.</value>
  </data>
  <data name="NotAuthorized.Text" xml:space="preserve">
    <value>Nur registrierte Benutzer können Kommentare verfassen. Wenn Sie einen Zugang haben, gehen Sie bitte zur Anmeldung</value>
  </data>
  <data name="lblApprove.Text" xml:space="preserve">
    <value>Beachten Sie, dass der Verfasser des Artikels den Kommentar zur Prüfung vorgelegt bekommt, bevor er auf der Webseite veröffentlicht wird.</value>
  </data>
  <data name="btnClose.Text" xml:space="preserve">
    <value>Fenster schließen</value>
  </data>
  <data name="lblResult.Text" xml:space="preserve">
    <value>Vielen Dank für Ihren Kommentar. Der Verfasser des Artikels ist soeben benachrichtigt worden und wird in Kürze über Ihren Beitrag entscheiden. Sollte Ihr Kommentar durch den Verfasser autorisiert werden, wird er auf der Webseite angezeigt werden.</value>
  </data>
  <data name="NewArticleComment.Text" xml:space="preserve">
    <value>{0}: Neuer Kommentar zu Artikel</value>
  </data>
  <data name="CommentApproved.Text" xml:space="preserve">
    <value>Sie haben den Kommentar zugelassen.</value>
  </data>
  <data name="CommentNotApproved.Text" xml:space="preserve">
    <value>Sie haben den Kommentar abgelehnt.</value>
  </data>
  <data name="btnTryAgain.Text" xml:space="preserve">
    <value>Nochmal versuchen</value>
  </data>
  <data name="lblGravatar.Text" xml:space="preserve">
    <value>Wir verwenden &lt;a href="http://www.gravatar.com" target="_blank"&gt;Gravatar&lt;/a&gt; für die Darstellung von Kommentaren in Artikeln. Fall Sie noch keinen Avatar mit Ihrer E-Mail Adresse verknüft haben, können Sie &lt;a href="http://www.gravatar.com" target="_blank"&gt;sich hier registrieren&lt;/a&gt;.</value>
  </data>
  <data name="lblResult_Approved.Text" xml:space="preserve">
    <value>Vielen Dank für Ihren Kommentar!</value>
  </data>
  <data name="lblResult_FillInAll.Text" xml:space="preserve">
    <value>Sie müssen einen Kommentar hinterlassen und sowohl Ihren Namen als auch eine E-Mail Adresse angeben!</value>
  </data>
  <data name="lblResult_FillInComment.Text" xml:space="preserve">
    <value>Sie müssen einen Kommentar eintragen!</value>
  </data>
  <data name="lblTitle.Text" xml:space="preserve">
    <value>Artikel kommentieren</value>
  </data>
  <data name="txtEmail.Text" xml:space="preserve">
    <value>Ihre E-Mail Adresse (erforderlich, wird aber nicht angezeigt)</value>
  </data>
  <data name="txtName.Text" xml:space="preserve">
    <value>Ihr Name (erfoderlich)</value>
  </data>
</root>